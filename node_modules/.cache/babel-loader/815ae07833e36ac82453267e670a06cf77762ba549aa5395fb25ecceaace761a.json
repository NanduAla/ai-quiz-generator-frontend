{"ast":null,"code":"// frontend/src/services/api.js\n// Uses environment variable set in Vercel or local .env\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:8000\";\n\n/**\r\n * Calls the FastAPI endpoint to generate a new quiz from a Wikipedia URL.\r\n */\nexport async function generateQuiz(url) {\n  const response = await fetch(`${BACKEND_URL}/generate_quiz`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      url\n    })\n  });\n  if (!response.ok) {\n    // Try to parse JSON error, fallback to status\n    let errorMessage = `HTTP error! Status: ${response.status}`;\n    try {\n      const errorData = await response.json();\n      errorMessage = errorData.detail || errorMessage;\n    } catch (err) {\n      // JSON parse failed, keep default message\n    }\n    throw new Error(errorMessage);\n  }\n  return response.json();\n}\n\n/**\r\n * Calls the FastAPI endpoint to get the list of saved quizzes.\r\n */\nexport async function getQuizHistory() {\n  const response = await fetch(`${BACKEND_URL}/history`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch history: ${response.status}`);\n  }\n  return response.json();\n}\n\n/**\r\n * Calls the FastAPI endpoint to fetch a single quiz by ID.\r\n */\nexport async function getSingleQuiz(quizId) {\n  const response = await fetch(`${BACKEND_URL}/quiz/${quizId}`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch quiz ID ${quizId}.`);\n  }\n  return response.json();\n}","map":{"version":3,"names":["BACKEND_URL","process","env","REACT_APP_BACKEND_URL","generateQuiz","url","response","fetch","method","headers","body","JSON","stringify","ok","errorMessage","status","errorData","json","detail","err","Error","getQuizHistory","getSingleQuiz","quizId"],"sources":["C:/Users/nandu/ai-quiz-generator/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\n// Uses environment variable set in Vercel or local .env\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:8000\";\r\n\r\n\r\n/**\r\n * Calls the FastAPI endpoint to generate a new quiz from a Wikipedia URL.\r\n */\r\nexport async function generateQuiz(url) {\r\n  const response = await fetch(`${BACKEND_URL}/generate_quiz`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ url }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    // Try to parse JSON error, fallback to status\r\n    let errorMessage = `HTTP error! Status: ${response.status}`;\r\n    try {\r\n      const errorData = await response.json();\r\n      errorMessage = errorData.detail || errorMessage;\r\n    } catch (err) {\r\n      // JSON parse failed, keep default message\r\n    }\r\n    throw new Error(errorMessage);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\n/**\r\n * Calls the FastAPI endpoint to get the list of saved quizzes.\r\n */\r\nexport async function getQuizHistory() {\r\n  const response = await fetch(`${BACKEND_URL}/history`);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Failed to fetch history: ${response.status}`);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\n/**\r\n * Calls the FastAPI endpoint to fetch a single quiz by ID.\r\n */\r\nexport async function getSingleQuiz(quizId) {\r\n  const response = await fetch(`${BACKEND_URL}/quiz/${quizId}`);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Failed to fetch quiz ID ${quizId}.`);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n"],"mappings":"AAAA;AACA;AACA,MAAMA,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;;AAGhF;AACA;AACA;AACA,OAAO,eAAeC,YAAYA,CAACC,GAAG,EAAE;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,WAAW,gBAAgB,EAAE;IAC3DQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAI,CAAC;EAC9B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB;IACA,IAAIC,YAAY,GAAG,uBAAuBR,QAAQ,CAACS,MAAM,EAAE;IAC3D,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACvCH,YAAY,GAAGE,SAAS,CAACE,MAAM,IAAIJ,YAAY;IACjD,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZ;IAAA;IAEF,MAAM,IAAIC,KAAK,CAACN,YAAY,CAAC;EAC/B;EAEA,OAAOR,QAAQ,CAACW,IAAI,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACA,OAAO,eAAeI,cAAcA,CAAA,EAAG;EACrC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,WAAW,UAAU,CAAC;EAEtD,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIO,KAAK,CAAC,4BAA4Bd,QAAQ,CAACS,MAAM,EAAE,CAAC;EAChE;EAEA,OAAOT,QAAQ,CAACW,IAAI,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACA,OAAO,eAAeK,aAAaA,CAACC,MAAM,EAAE;EAC1C,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,WAAW,SAASuB,MAAM,EAAE,CAAC;EAE7D,IAAI,CAACjB,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIO,KAAK,CAAC,2BAA2BG,MAAM,GAAG,CAAC;EACvD;EAEA,OAAOjB,QAAQ,CAACW,IAAI,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}