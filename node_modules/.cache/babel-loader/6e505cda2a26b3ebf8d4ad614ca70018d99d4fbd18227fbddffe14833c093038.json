{"ast":null,"code":"const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nexport async function generateQuiz(url) {\n  const res = await fetch(`${BACKEND_URL}/generate_quiz`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      url\n    })\n  });\n  if (!res.ok) {\n    let errorMessage = `HTTP error! Status: ${res.status}`;\n    try {\n      errorMessage = (await res.json()).detail || errorMessage;\n    } catch {}\n    throw new Error(errorMessage);\n  }\n  return res.json();\n}\nexport async function getQuizHistory() {\n  const res = await fetch(`${BACKEND_URL}/history`);\n  if (!res.ok) throw new Error(`Failed to fetch history: ${res.status}`);\n  return res.json();\n}\nexport async function getSingleQuiz(id) {\n  const res = await fetch(`${BACKEND_URL}/quiz/${id}`);\n  if (!res.ok) throw new Error(`Failed to fetch quiz ID ${id}`);\n  return res.json();\n}","map":{"version":3,"names":["BACKEND_URL","process","env","REACT_APP_BACKEND_URL","generateQuiz","url","res","fetch","method","headers","body","JSON","stringify","ok","errorMessage","status","json","detail","Error","getQuizHistory","getSingleQuiz","id"],"sources":["C:/Users/nandu/ai-quiz-generator/frontend/src/services/api.js"],"sourcesContent":["const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport async function generateQuiz(url) {\r\n  const res = await fetch(`${BACKEND_URL}/generate_quiz`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ url }),\r\n  });\r\n  if (!res.ok) {\r\n    let errorMessage = `HTTP error! Status: ${res.status}`;\r\n    try { errorMessage = (await res.json()).detail || errorMessage; } catch {}\r\n    throw new Error(errorMessage);\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function getQuizHistory() {\r\n  const res = await fetch(`${BACKEND_URL}/history`);\r\n  if (!res.ok) throw new Error(`Failed to fetch history: ${res.status}`);\r\n  return res.json();\r\n}\r\n\r\nexport async function getSingleQuiz(id) {\r\n  const res = await fetch(`${BACKEND_URL}/quiz/${id}`);\r\n  if (!res.ok) throw new Error(`Failed to fetch quiz ID ${id}`);\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAErD,OAAO,eAAeC,YAAYA,CAACC,GAAG,EAAE;EACtC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,WAAW,gBAAgB,EAAE;IACtDQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAI,CAAC;EAC9B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE;IACX,IAAIC,YAAY,GAAG,uBAAuBR,GAAG,CAACS,MAAM,EAAE;IACtD,IAAI;MAAED,YAAY,GAAG,CAAC,MAAMR,GAAG,CAACU,IAAI,CAAC,CAAC,EAAEC,MAAM,IAAIH,YAAY;IAAE,CAAC,CAAC,MAAM,CAAC;IACzE,MAAM,IAAII,KAAK,CAACJ,YAAY,CAAC;EAC/B;EACA,OAAOR,GAAG,CAACU,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeG,cAAcA,CAAA,EAAG;EACrC,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,WAAW,UAAU,CAAC;EACjD,IAAI,CAACM,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIK,KAAK,CAAC,4BAA4BZ,GAAG,CAACS,MAAM,EAAE,CAAC;EACtE,OAAOT,GAAG,CAACU,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeI,aAAaA,CAACC,EAAE,EAAE;EACtC,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,WAAW,SAASqB,EAAE,EAAE,CAAC;EACpD,IAAI,CAACf,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIK,KAAK,CAAC,2BAA2BG,EAAE,EAAE,CAAC;EAC7D,OAAOf,GAAG,CAACU,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}