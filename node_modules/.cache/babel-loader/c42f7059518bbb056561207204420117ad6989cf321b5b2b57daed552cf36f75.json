{"ast":null,"code":"const API_BASE = \"http://127.0.0.1:8000\"; // Backend URL\n\nexport const generateQuiz = async (title, content) => {\n  try {\n    const response = await fetch(`${API_BASE}/generate-quiz`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        content\n      })\n    });\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error generating quiz:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE","generateQuiz","title","content","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","error","console"],"sources":["C:/Users/nandu/ai-quiz-generator/frontend/src/services/api.js"],"sourcesContent":["const API_BASE = \"http://127.0.0.1:8000\"; // Backend URL\r\n\r\nexport const generateQuiz = async (title, content) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE}/generate-quiz`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title, content }),\r\n    });\r\n\r\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error generating quiz:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,OAAO,KAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,gBAAgB,EAAE;MACxDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAQ,CAAC;IACzC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;IAC3E,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}